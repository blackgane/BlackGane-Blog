<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux 的文件权限与目录配置</title>
      <link href="/2020/09/10/Linux%20%E7%9A%84%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E4%B8%8E%E7%9B%AE%E5%BD%95%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/09/10/Linux%20%E7%9A%84%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E4%B8%8E%E7%9B%AE%E5%BD%95%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Linux一般将文件可存取的身份分为三个类别，分别是 owner/group/others，且三种身份各有 read/write/execute 等权限。</p></blockquote><h2 id="使用者与群组"><a href="#使用者与群组" class="headerlink" title="使用者与群组"></a>使用者与群组</h2><h3 id="文件拥有者"><a href="#文件拥有者" class="headerlink" title="文件拥有者"></a>文件拥有者</h3><p>由于Linux是个多用户多任务的系统, 所以可以设置为只文件拥有者才可查看或修改，其他人无法查看修改</p><h3 id="群组概念"><a href="#群组概念" class="headerlink" title="群组概念"></a>群组概念</h3><p>以团队形式来共享，分割可查看，修改的权限。</p><h3 id="其他人"><a href="#其他人" class="headerlink" title="其他人"></a>其他人</h3><p>既不是文件拥有者，又不是群组里的人，root除外。</p><h3 id="Linux-使用者身份与群组记录的文件"><a href="#Linux-使用者身份与群组记录的文件" class="headerlink" title="Linux 使用者身份与群组记录的文件"></a>Linux 使用者身份与群组记录的文件</h3><p>默认的情况下：</p><ol><li>所有的系统上的帐号与一般身份使用者，还有root， 记录在 /etc/passwd</li><li>个人的密码则是记录在 /etc/shadow </li><li>Linux所有的群组名称都纪录在 /etc/group</li></ol><h2 id="Linux-文件权限概念"><a href="#Linux-文件权限概念" class="headerlink" title="Linux 文件权限概念"></a>Linux 文件权限概念</h2><h3 id="Linux文件属性"><a href="#Linux文件属性" class="headerlink" title="Linux文件属性"></a>Linux文件属性</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blackgane/cdn_article@master/article_cdn/ls.jpg" alt="ls -al"></p><ol><li><p>第一栏代表这个文件的类型与权限（permission）</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blackgane/cdn_article@master/article_cdn/permission.jpg" alt="文件的类型与权限之内容"></p><ol><li><p>第一个字符代表这个文件是“目录、文件或链接文件等等”：</p><ul><li>当为[ d ]则是目录，例如上表文件名为“.config”的那一行；</li><li>当为[ - ]则是文件，例如上表文件名为“initial-setup-ks.cfg”那一行；</li><li>若是[ l ]则表示为链接文件（link file）；</li><li>若是[ b ]则表示为设备文件里面的可供储存的周边设备（可随机存取设备）；</li><li>若是[ c ]则表示为设备文件里面的序列埠设备，例如键盘、鼠标（一次性读取设备）。</li></ul></li><li><p>接下来的字符中，以三个为一组，且均为“rwx” 的三个参数的组合。</p><ul><li>[ r ]代表可读（read）、[ w ]代表可写（write）、[ x ]代表可执行（execute）</li><li>要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。</li><li>第一组为“文件拥有者可具备的权限”，以“initial-setup-ks.cfg”那个文件为例， 该文件的拥有者可以读写，但不可执行；</li><li>第二组为“加入此群组之帐号的权限”；</li><li>第三组为“非本人且没有加入本群组之其他帐号的权限”。</li></ul></li></ol></li><li><p>第二栏表示有多少文件名链接到此节点（i-node）</p></li><li><p>第三栏表示这个文件（或目录）的“拥有者帐号”</p></li><li><p>第四栏表示这个文件的所属群组</p></li><li><p>第五栏为这个文件的容量大小，默认单位为Bytes；</p></li><li><p>第六栏为这个文件的创建日期或者是最近的修改日期</p></li><li><p>第七栏为这个文件的文件名</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件权限 </tag>
            
            <tag> 目录配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>man page &amp; info page</title>
      <link href="/2020/09/10/man%20page%20&amp;%20info%20page/"/>
      <url>/2020/09/10/man%20page%20&amp;%20info%20page/</url>
      
        <content type="html"><![CDATA[<h2 id="man-page"><a href="#man-page" class="headerlink" title="man page"></a>man page</h2><h3 id="常见数字"><a href="#常见数字" class="headerlink" title="常见数字"></a>常见数字</h3><table><thead><tr><th>代号</th><th>代表内容</th></tr></thead><tbody><tr><td>1</td><td>使用者在shell环境中可以操作的指令或可可执行文件</td></tr><tr><td>2</td><td>系统核心可调用的函数与工具等</td></tr><tr><td>3</td><td>一些常用的函数（function）与函数库（library），大部分为C的函数库（libc）</td></tr><tr><td>4</td><td>设备文件的说明，通常在/dev下的文件</td></tr><tr><td>5</td><td>配置文件或者是某些文件的格式</td></tr><tr><td>6</td><td>游戏（games）</td></tr><tr><td>7</td><td>惯例与协定等，例如Linux文件系统、网络协定、ASCII code等等的说明</td></tr><tr><td>8</td><td>系统管理员可用的管理指令</td></tr><tr><td>9</td><td>跟kernel有关的文件</td></tr></tbody></table><ul><li>上述的表格内容可以使用“man man”来更详细的取得说明。</li></ul><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><table><thead><tr><th>代号</th><th>内容说明</th></tr></thead><tbody><tr><td>NAME</td><td>简短的指令、数据名称说明</td></tr><tr><td>SYNOPSIS</td><td>简短的指令下达语法（syntax）简介</td></tr><tr><td>DESCRIPTION</td><td>较为完整的说明，这部分最好仔细看看！</td></tr><tr><td>OPTIONS</td><td>针对 SYNOPSIS 部分中，有列举的所有可用的选项说明</td></tr><tr><td>COMMANDS</td><td>当这个程序（软件）在执行的时候，可以在此程序（软件）中下达的指令</td></tr><tr><td>FILES</td><td>这个程序或数据所使用或参考或链接到的某些文件</td></tr><tr><td>SEE ALSO</td><td>可以参考的，跟这个指令或数据有相关的其他说明！</td></tr><tr><td>EXAMPLE</td><td>一些可以参考的范例</td></tr></tbody></table><h3 id="查看步骤"><a href="#查看步骤" class="headerlink" title="查看步骤"></a>查看步骤</h3><ol><li>先察看NAME的项目，约略看一下这个数据的意思；</li><li>再详看一下DESCRIPTION，这个部分会提到很多相关的数据与使用时机，从这个地方可<br>以学到很多小细节呢；</li><li>而如果这个指令其实很熟悉了（例如上面的date），那么鸟哥主要就是查询关于OPTIONS的部分了！ 可以知道每个选项的意义，这样就可以下达比较细部的指令内容呢！</li><li>最后，鸟哥会再看一下，跟这个数据有关的还有哪些东西可以使用的？举例来说，上面的SEE ALSO就告知我们还可以利用“info coreutils date”来进一步查阅数据；</li><li>某些说明内容还会列举有关的文件（FILES 部分）来提供我们参考！这些都是很有帮助的！</li></ol><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><table><thead><tr><th>按键</th><th>进行工作</th></tr></thead><tbody><tr><td>空白键</td><td>向下翻一页</td></tr><tr><td>[PageDown]</td><td>向下翻一页</td></tr><tr><td>[PageUp]</td><td>向上翻一页</td></tr><tr><td>[Home]</td><td>去到第一页</td></tr><tr><td>[End]</td><td>去到最后一页</td></tr><tr><td>/string</td><td>向“下”搜寻 string 这个字串</td></tr><tr><td>?string</td><td>向“上”搜寻 string 这个字串</td></tr><tr><td>n, N</td><td>利用 / 或 ? 来搜寻字串时，可以用 n 来继续下一个搜寻 （不论是 / 或 ?），可以利用 N 来进行“反向”搜寻。</td></tr><tr><td>q</td><td>结束这次的 man page</td></tr></tbody></table><h3 id="特殊查询"><a href="#特殊查询" class="headerlink" title="特殊查询"></a>特殊查询</h3><ol><li>查询“man”这个指令有关的说明文档 -f</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[blackgane@study ~]$ man -f man</span><br><span class="line">man （1） - an interface to the on-line reference manuals</span><br><span class="line">man （1p） - display system documentation</span><br><span class="line">man （7） - macros to format man pages</span><br></pre></td></tr></table></figure><ol start="2"><li>查询“man”这个关键词的说明文档 -k</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[blackgane@study ~]$ man -k man</span><br><span class="line">fallocate （2） - manipulate file space</span><br><span class="line">zshall （1） - the Z shell meta-man page</span><br><span class="line">....（中间省略）....</span><br><span class="line">yum-config-manager （1） - manage yum configuration options and yum repositories</span><br></pre></td></tr></table></figure><h2 id="info-page"><a href="#info-page" class="headerlink" title="info page"></a>info page</h2><h3 id="数据意义"><a href="#数据意义" class="headerlink" title="数据意义"></a>数据意义</h3><ol><li>File：代表这个info page的数据是来自info.info文件所提供的；</li><li>Node：代表目前的这个页面是属于Top节点。 意思是info.info内含有很多信息，而Top仅是info.info文件内的一个节点内容而已；</li><li>Next：下一个节点的名称为Getting Started，你也可以按“N”到下个节点去；</li><li>Up：回到上一层的节点总揽画面，你也可以按下“U”回到上一层；</li><li>Prev：前一个节点。但由于Top是info.info的第一个节点，所以上面没有前一个节点的信息。</li></ol><h3 id="快捷键-1"><a href="#快捷键-1" class="headerlink" title="快捷键"></a>快捷键</h3><table><thead><tr><th>按键</th><th>进行工作</th></tr></thead><tbody><tr><td>空白键</td><td>向下翻一页</td></tr><tr><td>[Page Down]</td><td>向下翻一页</td></tr><tr><td>[Page Up]</td><td>向上翻一页</td></tr><tr><td>[tab]</td><td>在 node 之间移动，有 node 的地方，通常会以 * 显示。</td></tr><tr><td>[Enter]</td><td>当光标在 node 上面时，按下 Enter 可以进入该 node 。</td></tr><tr><td>b</td><td>移动光标到该 info 画面当中的第一个 node 处</td></tr><tr><td>e</td><td>移动光标到该 info 画面当中的最后一个 node 处</td></tr><tr><td>n</td><td>前往下一个 node 处</td></tr><tr><td>p</td><td>前往上一个 node 处</td></tr><tr><td>u</td><td>向上移动一层</td></tr><tr><td>s（/）</td><td>在 info page 当中进行搜寻</td></tr><tr><td>h, ?</td><td>显示求助菜单</td></tr><tr><td>q</td><td>结束这次的 info page</td></tr></tbody></table><h2 id="其他有用的文件"><a href="#其他有用的文件" class="headerlink" title="其他有用的文件"></a>其他有用的文件</h2><blockquote><p>很多原版软件释出的时候，都会有一些安装须知、预计工作事项、未来工作规划等等的东西，还有包括可安装的程序等， 这些文件也都放置在 /usr/share/doc 当中</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ManPage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装CentOS7</title>
      <link href="/2020/09/09/%E5%AE%89%E8%A3%85CentOS7/"/>
      <url>/2020/09/09/%E5%AE%89%E8%A3%85CentOS7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载链接：<a href="http://vault.centos.org/7.1.1503/isos/x86_64/">http://vault.centos.org/7.1.1503/isos/x86_64/</a></p></blockquote><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol><li>调整开机媒体（BIOS）：务必要使用CD或DVD光盘开机，通常需要调整BIOS；</li><li>选择安装模式与开机：包括图形接口/命令行等，也可加入特殊参数来开机进入安装画面；</li><li>选择语系数据：由于不同地区的键盘按键不同，此时需要调整语系/键盘/鼠标等配备；</li><li>软件选择：需要什么样的软件？全部安装还是默认安装即可？</li><li>磁盘分区：最重要的项目之一了！记得将刚刚的规划单拿出来设置；</li><li>开机管理程序、网络、时区设置与root密码：一些需要的系统基础设置！</li><li>安装后的首次设置：安装完毕后还有一些事项要处理，包括使用者、SELinux与防火墙等！</li></ol><h3 id="加入强制使用-GPT-分区表的安装参数"><a href="#加入强制使用-GPT-分区表的安装参数" class="headerlink" title="加入强制使用 GPT 分区表的安装参数"></a>加入强制使用 GPT 分区表的安装参数</h3><ol><li>使用方向键，将图 3.2.8 的光标移动到“ Install CentOS 7 ”的项目中</li><li>按下键盘的 <code>Tab</code> 按钮，让光标跑到画面最下方等待输入额外的核心参数</li><li>在出现的画面中，输入如下画面的数据 （注意，各个项目要有空格，最后一个是光标本身而非底线）</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blackgane/cdn_article@master/article_cdn/gpt.jpg" alt="加入额外的核心参数修改安装程序"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux主机规划与磁盘分区</title>
      <link href="/2020/09/07/Linux%E4%B8%BB%E6%9C%BA%E8%A7%84%E5%88%92%E4%B8%8E%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA/"/>
      <url>/2020/09/07/Linux%E4%B8%BB%E6%9C%BA%E8%A7%84%E5%88%92%E4%B8%8E%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在Linux系统中，每个设备都被当成一个文件来对待</p></blockquote><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><table><thead><tr><th>设备</th><th>设备在Linux内的文件名</th></tr></thead><tbody><tr><td>SCSI/SATA/USB硬盘机</td><td>/dev/sd[a-p]</td></tr><tr><td>USB闪存盘</td><td>/dev/sd[a-p] （与SATA相同）</td></tr><tr><td>VirtI/O界面</td><td>/dev/vd[a-p] （用于虚拟机内）</td></tr><tr><td>软盘机</td><td>/dev/fd[0-7]</td></tr><tr><td>打印机</td><td>/dev/lp[0-2] （25针打印机） /dev/usb/lp[0-15] （USB 接口）</td></tr><tr><td>鼠标</td><td>/dev/input/mouse[0-15] （通用） /dev/psaux （PS/2界面）/dev/mouse （当前鼠标）</td></tr><tr><td>CDROM/DVDROM</td><td>/dev/scd[0-1] （通用） /dev/sr[0-1] （通用，CentOS 较常见）/dev/cdrom （当前 CDROM）</td></tr><tr><td>磁带机</td><td>/dev/ht0 （IDE 界面） /dev/st0 （SATA/SCSI界面） /dev/tape（当前磁带）</td></tr><tr><td>IDE硬盘机</td><td>/dev/hd[a-d] （旧式系统才有）</td></tr></tbody></table><h3 id="MSDOS-（MBR）-分区表格式与限制"><a href="#MSDOS-（MBR）-分区表格式与限制" class="headerlink" title="MSDOS （MBR） 分区表格式与限制"></a>MSDOS （MBR） 分区表格式与限制</h3><p>磁盘的第一个扇区 512Bytes 会有这两个数据：</p><ol><li>主要开机记录区（Master Boot Record, MBR）：可以安装开机管理程序的地方，有446Bytes</li><li>分区表（partition table）：记录整颗硬盘分区的状态，有64 Bytes</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blackgane/cdn_article@master/article_cdn/disk.jpg" alt="磁盘分区表的作用示意图"></p><p>P1:/dev/sda1<br>P2:/dev/sda2<br>L1:/dev/sda5<br>L2:/dev/sda6<br>L3:/dev/sda7<br>L4:/dev/sda8<br>L5:/dev/sda9</p><blockquote><p>怎么设备文件名没有/dev/sda3与/dev/sda4呢？因为前面四个号码都是保留给<br>Primary或Extended用的嘛！ 所以逻辑分区的设备名称号码就由5号开始了！这在 MBR 方式的分区表中是个很重要的特性，不能忘记喔！</p></blockquote><p>MBR 主要分区、延伸分区与逻辑分区的特性：</p><ul><li>主要分区与延伸分区最多可以有四个（硬盘的限制）</li><li>分区表就只有64 Bytes而已，最多只能容纳四笔分区的记录</li><li>延伸分区最多只能有一个（操作系统的限制）</li><li>逻辑分区是由延伸分区持续切割出来的分区；</li><li>能够被格式化后，作为数据存取的分区为主要分区与逻辑分区。延伸分区无法格式化；</li><li>逻辑分区的数量依操作系统而不同，在Linux系统中SATA硬盘已经可以突破63个以上的分区限制；</li></ul><h3 id="GUID-partition-table-GPT-磁盘分区表"><a href="#GUID-partition-table-GPT-磁盘分区表" class="headerlink" title="GUID partition table, GPT 磁盘分区表"></a>GUID partition table, GPT 磁盘分区表</h3><p>因为过去一个扇区大小就是 512Bytes 而已，不过目前已经有 4K 的扇区设计出现！为了相容于所有的磁盘，因此在扇区的定义上面， 大多会使用所谓的逻辑区块位址（Logical Blockv Address, LBA）来处理。GPT 将磁盘所有区块以此 LBA（默认为 512Bytes 喔！） 来规划，而第一个 LBA 称为 LBA0 （从 0 开始编号）。</p><p>与 MBR 仅使用第一个 512Bytes 区块来纪录不同， GPT 使用了 34 个 LBA 区块来纪录分区信息！同时与过去 MBR 仅有一的区块，被干掉就死光光的情况不同， GPT 除了前面 34 个LBA 之外，整个磁盘的最后 33 个 LBA 也拿来作为另一个备份！这样或许会比较安全些吧！<br>详细的结构有点像下面的模样：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blackgane/cdn_article@master/article_cdn/guid_partition_table_scheme.jpg" alt="GUID Partition Table Scheme"></p><ul><li><p>LBA0 （MBR 相容区块）</p><p>  与 MBR 模式相似的，这个相容区块也分为两个部份，一个就是跟之前 446 Bytes 相似的区块，储存了第一阶段的开机管理程序！ 而在原本的分区表的纪录区内，这个相容模式仅放入一个特殊标志的分区，用来表示此磁盘为 GPT 格式之意。而不懂 GPT 分区表的磁盘管理程序， 就不会认识这颗磁盘，除非用户有特别要求要处理这颗磁盘，否则该管理软件不能修改此分区信息，进一步保护了此磁盘喔！</p></li><li><p>LBA1 （GPT 表头纪录）</p><p>  这个部份纪录了分区表本身的位置与大小，同时纪录了备份用的 GPT 分区 （就是前面谈到的在最后 34 个 LBA 区块） 放置的位置， 同时放置了分区表的检验机制码（CRC32），操作系统可以根据这个检验码来判断 GPT 是否正确。若有错误，还可以通过这个纪录区来取得备份的 GPT（磁盘最后的那个备份区块） 来恢复 GPT 的正常运行！</p></li><li><p>LBA2-33 （实际纪录分区信息处）</p><p>  从 LBA2 区块开始，每个 LBA 都可以纪录 4 笔分区纪录，所以在默认的情况下，总共可以有 432 = 128 笔分区纪录喔！因为每个 LBA 有512Bytes，因此每笔纪录用到 128Bytes 的空间，除了每笔纪录所需要的识别码与相关的纪录之外，GPT 在每笔纪录中分别提供了 64bits 来记载开始/结束的扇区号码，因此，GPT 分区表对於单一分区来说，他的最大容量限制就会在“ 264 512Bytes = 263 1KBytes = 233TB = 8 ZB ”，要注意 1ZB= 230TB 啦！ 你说有没有够大了？</p></li></ul><blockquote><p>现在 GPT 分区默认可以提供多达 <strong>128</strong> 笔纪录，而在 Linux 本身的核心设备纪录中，针对单一磁盘来说，虽然过去最多只能到达 15 个分区，不过由于 Linux kernel 通过 udev 等方式的处理，现在 Linux 也已经没有这个限制在了！此外，GPT 分区已经没有所谓的主、延伸、逻辑分区的概念，既然每笔纪录都可以独立存在， 当然每个都可以视为是主分区！每一个分区都可以拿来格式化使用喔！</p></blockquote><p>整个开机流程到操作系统之前的动作应该是这样的：</p><p>BIOS–&gt;MBR–&gt;–&gt;boot loader–&gt;核心文件；</p><ol><li>BIOS：开机主动执行的固件，会认识第一个可开机的设备；</li><li>MBR：第一个可开机设备的第一个扇区内的主要开机记录区块，内含开机管理程序；</li><li>开机管理程序（boot loader）：一个可读取核心文件来执行的软件；</li><li>核心文件：开始操作系统的功能…</li></ol><blockquote><p>boot loader的功能主要有：提供菜单、载入核心、转交控制权给其他loader</p></blockquote><blockquote><p>boot loader可以安装的地点有两个，分别是 MBR 与 boot sector</p></blockquote><h2 id="Linux安装模式下，磁盘分区的选择"><a href="#Linux安装模式下，磁盘分区的选择" class="headerlink" title="Linux安装模式下，磁盘分区的选择"></a>Linux安装模式下，磁盘分区的选择</h2><h3 id="目录树结构-（directory-tree）"><a href="#目录树结构-（directory-tree）" class="headerlink" title="目录树结构 （directory tree）"></a>目录树结构 （directory tree）</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blackgane/cdn_article@master/article_cdn/directory_tree.jpg" alt="Directory Tree"></p><h3 id="文件系统与目录树的关系（挂载）"><a href="#文件系统与目录树的关系（挂载）" class="headerlink" title="文件系统与目录树的关系（挂载）"></a>文件系统与目录树的关系（挂载）</h3><p>所谓的“挂载”就是利用一个目录当成进入点，将磁盘分区的数据放置在该目录下； 也就是说，进入该目录就可以读取该分区的意思。这个动作我们称为“挂载”，那个进入点的目录我们称为“挂载点”。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blackgane/cdn_article@master/article_cdn/tree.jpg" alt="目录树与分区之间的相关性"></p><h2 id="安装前规划"><a href="#安装前规划" class="headerlink" title="安装前规划"></a>安装前规划</h2><ol><li>NAT（达成IP分享器的功能）</li><li>SAMBA（加入Windows网络上的芳邻）</li><li>Mail（邮件服务器）</li><li>Web（WWW服务器）</li><li>DHCP（提供用户端自动取得IP的功能）</li><li>FTP</li></ol><p>目录分配</p><ul><li>/boot</li><li>/</li><li>/home</li><li>/var</li><li>Swap</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语音标</title>
      <link href="/2020/09/06/DJ%E9%9F%B3%E6%A0%87/"/>
      <url>/2020/09/06/DJ%E9%9F%B3%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.yingyutu.com/dj">DJ音标</a></li><li><a href="https://www.yingyutu.com/kk">KK音标</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
            <tag> 音标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学英语准备工作</title>
      <link href="/2020/09/06/%E5%AD%A6%E8%8B%B1%E8%AF%AD%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/"/>
      <url>/2020/09/06/%E5%AD%A6%E8%8B%B1%E8%AF%AD%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><a href="http://testyourvocab.com/">词汇量检测</a></li></ol><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><ol><li><p><a href="https://github.com/yujiangshui/A-Programmers-Guide-to-English">A-Programmers-Guide-to-English</a></p></li><li><p><a href="https://github.com/byoungd/English-level-up-tips-for-Chinese">English-level-up-tips-for-Chinese</a></p></li></ol><h3 id="实用Chrome插件"><a href="#实用Chrome插件" class="headerlink" title="实用Chrome插件"></a>实用Chrome插件</h3><ol><li><a href="https://chrome.google.com/webstore/detail/cambridge-dictionary/kjmjndmenaoihimmojhdabgfjefonmja">Cambridge Dictionary</a>：对准单词右击就打开 Cambridge Dictionary 看到对应的词义，用以重度查询</li><li><a href="https://chrome.google.com/webstore/detail/google-dictionary-by-goog/mgijmajocgfcbeboacabfgobmjgjcoja">Google Dictionary (by Google)</a>：双击即可弹出非常简单的弹窗，附带一个英文发音和简短的英文释义，用以轻度查询</li><li><a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen">Grammarly</a>：语法检测。</li></ol>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习仓库</title>
      <link href="/2020/09/06/Java%E5%AD%A6%E4%B9%A0%E4%BB%93%E5%BA%93/"/>
      <url>/2020/09/06/Java%E5%AD%A6%E4%B9%A0%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="中国科学技术大学课程资源"><a href="#中国科学技术大学课程资源" class="headerlink" title="中国科学技术大学课程资源"></a>中国科学技术大学课程资源</h2><p><a href="https://github.com/USTC-Resource/USTC-Course">仓库地址</a></p><h2 id="浙江大学课程攻略共享计划"><a href="#浙江大学课程攻略共享计划" class="headerlink" title="浙江大学课程攻略共享计划"></a>浙江大学课程攻略共享计划</h2><p><a href="https://github.com/QSCTech/zju-icicles">仓库地址</a></p><h2 id="现代-JavaScript-教程"><a href="#现代-JavaScript-教程" class="headerlink" title="现代 JavaScript 教程"></a>现代 JavaScript 教程</h2><p>以最新的 JavaScript 标准为基准。通过简单但足够详细的内容，为你讲解从基础到高阶的 JavaScript 相关知识，</p><p>当前项目已被翻译为多语言。</p><p><a href="https://github.com/javascript-tutorial/zh.javascript.info">仓库地址</a></p><h2 id="JavaScript-算法与数据结构"><a href="#JavaScript-算法与数据结构" class="headerlink" title="JavaScript 算法与数据结构"></a>JavaScript 算法与数据结构</h2><p>本仓库包含了多种基于 JavaScript 的算法与数据结构，每种算法和数据结构都有自己的 README，包含相关说明和链接，同样的也被翻译为多语言</p><p><a href="https://github.com/trekhleb/javascript-algorithms/blob/master/README.zh-CN.md">仓库地址</a></p><h2 id="Nodejs-Roadmap"><a href="#Nodejs-Roadmap" class="headerlink" title="Nodejs-Roadmap"></a>Nodejs-Roadmap</h2><p>这是一个侧重于 Node.js 服务端的开发指南，如果你想进一步学习nodejs的话可以尝试一下</p><p><a href="https://github.com/Q-Angelo/Nodejs-Roadmap">仓库地址</a></p><h2 id="FE-Interview-Questions"><a href="#FE-Interview-Questions" class="headerlink" title="FE-Interview-Questions"></a>FE-Interview-Questions</h2><p>前端面试常考问题整理，按模块知识点分类</p><p><a href="https://blog.poetries.top/FE-Interview-Questions/">文档页面 </a></p><p><a href="https://github.com/poetries/FE-Interview-Questions">仓库地址</a></p><h2 id="JavaScript-进阶问题列表"><a href="#JavaScript-进阶问题列表" class="headerlink" title="JavaScript 进阶问题列表"></a>JavaScript 进阶问题列表</h2><p>从基础到进阶，测试你有多了解 JavaScript，刷新你的知识，或者帮助你的 coding<br>面试！作者每周都会在这个仓库下更新的问题，同样的也被翻译为多语言</p><p><a href="https://github.com/lydiahallie/javascript-questions/blob/master/zh-CN/README-zh_CN.md">仓库地址</a></p><h2 id="中国科学技术大学课程资源-1"><a href="#中国科学技术大学课程资源-1" class="headerlink" title="中国科学技术大学课程资源"></a>中国科学技术大学课程资源</h2><p><a href="https://github.com/USTC-Resource/USTC-Course">仓库地址</a></p><h2 id="浙江大学课程攻略共享计划-1"><a href="#浙江大学课程攻略共享计划-1" class="headerlink" title="浙江大学课程攻略共享计划"></a>浙江大学课程攻略共享计划</h2><p><a href="https://github.com/QSCTech/zju-icicles">仓库地址</a></p><h2 id="awesome-java-books"><a href="#awesome-java-books" class="headerlink" title="awesome-java-books"></a>awesome-java-books</h2><p>如果你想知道学习应该看什么书籍，关注这个仓库就对了，作者把不同阶段不同知识点的书籍都列了出来</p><p><a href="https://github.com/sorenduan/awesome-java-books">仓库地址</a></p><h2 id="OnJava8"><a href="#OnJava8" class="headerlink" title="OnJava8"></a>OnJava8</h2><p>《On Java 8》中文版，又名《Java编程思想》 第5版 ，一本可以比较系统的学习Java基础的书籍，最重要的是，它是完全免费的</p><p><a href="https://github.com/LingCoder/OnJava8">仓库地址</a></p><p>下面是两个工具类教程</p><h2 id="IntelliJ-IDEA-Tutorial"><a href="#IntelliJ-IDEA-Tutorial" class="headerlink" title="IntelliJ-IDEA-Tutorial"></a>IntelliJ-IDEA-Tutorial</h2><p>初学者对IDEA不太了解的可以看看这个仓库，这也是很多培训班IDEA教程的素材来源</p><p><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial">仓库地址</a></p><h2 id="Linux-Tutorial"><a href="#Linux-Tutorial" class="headerlink" title="Linux-Tutorial"></a>Linux-Tutorial</h2><p>想要简单的学习一下linux操作可以看看这个仓库，安装和简单的使用足够了</p><p><a href="https://github.com/judasn/Linux-Tutorial">仓库地址</a></p><h2 id="advanced-java"><a href="#advanced-java" class="headerlink" title="advanced-java"></a>advanced-java</h2><p>互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识，后端同学必看，前端同学也可学习</p><p><a href="https://github.com/doocs/advanced-java">仓库地址</a></p><h2 id="java-design-patterns"><a href="#java-design-patterns" class="headerlink" title="java-design-patterns"></a>java-design-patterns</h2><p>学习Java设计模式必看，对新人不太友好的地方就是它是英文的</p><p><a href="https://github.com/iluwatar/java-design-patterns">仓库地址</a></p><h2 id="The-Algorithms-Java"><a href="#The-Algorithms-Java" class="headerlink" title="The Algorithms - Java"></a>The Algorithms - Java</h2><p>使用Java语言的算法教程，同样它也是英文的</p><p><a href="https://github.com/TheAlgorithms/Java">仓库地址</a></p><p>然后是几个关于spring学习的仓库</p><h2 id="spring-boot-demo"><a href="#spring-boot-demo" class="headerlink" title="spring-boot-demo"></a>spring-boot-demo</h2><p>spring boot demo 是一个用来深度学习并实战 spring boot 的项目，目前总共包含 65 个集成demo</p><p><a href="https://github.com/xkcoding/spring-boot-demo">仓库地址</a></p><h2 id="SpringCloudLearning"><a href="#SpringCloudLearning" class="headerlink" title="SpringCloudLearning"></a>SpringCloudLearning</h2><p>方志朋史上最简单的Spring Cloud教程源码</p><p><a href="https://github.com/forezp/SpringCloudLearning">仓库地址</a></p><h2 id="SpringCloud-Learning"><a href="#SpringCloud-Learning" class="headerlink" title="SpringCloud-Learning"></a>SpringCloud-Learning</h2><p>Spring Cloud基础教程，持续连载更新中</p><p><a href="https://github.com/dyc87112/SpringCloud-Learning">仓库地址</a></p><h2 id="mall-learning"><a href="#mall-learning" class="headerlink" title="mall-learning"></a>mall-learning</h2><p>第三个项目是 mall-learning ，这是拥有 35k+star 的mall项目搭配的学习教程，值得推荐</p><p><a href="https://github.com/macrozheng/mall-learning">仓库地址</a></p><p>然后是面试的项目，这类的项目很多，推荐两个最火的</p><h2 id="JavaGuide"><a href="#JavaGuide" class="headerlink" title="JavaGuide"></a>JavaGuide</h2><p><a href="https://github.com/Snailclimb/JavaGuide">仓库地址</a></p><p>「Java学习+面试指南」一份涵盖大部分Java程序员所需要掌握的核心知识,我找工作的时候这个仓库帮助我不要太多，guide哥牛逼</p><h2 id="CS-Notes"><a href="#CS-Notes" class="headerlink" title="CS-Notes"></a>CS-Notes</h2><p><a href="https://github.com/CyC2018/CS-Notes">仓库地址</a></p><p>技术面试必备基础知识、Leetcode、计算机操作系统、计算机网络、系统设计、Java、Python、C++都有，值得收藏</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DevOps Developer - Roadmaps</title>
      <link href="/2019/09/23/DevOps%20Developer%20-%20Roadmaps/"/>
      <url>/2019/09/23/DevOps%20Developer%20-%20Roadmaps/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转自<a href="https://roadmap.sh/devops">https://roadmap.sh/devops</a></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://roadmap.sh/roadmaps/devops.png" alt="DevOps Developer"></p>]]></content>
      
      
      <categories>
          
          <category> Roadmaps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DevOps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Backend Developer - Roadmaps</title>
      <link href="/2019/09/23/Backend%20Developer%20-%20Roadmaps/"/>
      <url>/2019/09/23/Backend%20Developer%20-%20Roadmaps/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转自<a href="https://roadmap.sh/backend">https://roadmap.sh/backend</a></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://roadmap.sh/roadmaps/backend.png" alt="Backend Developer"></p>]]></content>
      
      
      <categories>
          
          <category> Roadmaps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frontend Developer - Roadmaps</title>
      <link href="/2019/09/23/Frontend%20Developer%20-%20Roadmaps/"/>
      <url>/2019/09/23/Frontend%20Developer%20-%20Roadmaps/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转自<a href="https://roadmap.sh/frontend">https://roadmap.sh/frontend</a></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://roadmap.sh/roadmaps/frontend.png" alt="Frontend Developer"></p>]]></content>
      
      
      <categories>
          
          <category> Roadmaps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
